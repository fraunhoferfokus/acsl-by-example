
MAKEFLAGS += --silent --no-print-directory

FILELIST    := filelist.path
SCRIPT_DIR  := ../Scripts
DIR         := $(shell pwd)/
FILE        := $(shell cat $(FILELIST))

ifndef OBJ
	OBJ := $(join $(addsuffix /,$(FILE)),$(addsuffix .o,$(FILE)))
endif


test:: lib
	@for i in $(FILE);\
        do \
                (cd "$$i"; $(MAKE) -s test || break);\
        done


obj: FORCE
	for i in $(FILE);\
	do \
		($(MAKE) obj -sC $$i);\
	done

clean:: FORCE
	@for i in $(FILE);\
        do \
                (cd "$$i"; $(MAKE) -s clean);\
        done

generate:
	@for i in $(FILE);\
        do \
                ($(MAKE) generate -sC $$i);\
        done

report:
	@for i in $(FILE);\
        do \
                ($(MAKE) report -sC $$i);\
        done

report-clean:
	@for i in $(FILE);\
        do \
                ($(MAKE) report-clean -sC $$i);\
        done

preport:
	@for i in $(FILE);\
        do \
                ($(MAKE) preport -sC $$i);\
        done

preport-clean:
	@for i in $(FILE);\
        do \
                ($(MAKE) preport-clean -sC $$i);\
        done

areport:
	@for i in $(FILE);\
        do \
                ($(MAKE) areport -sC $$i);\
        done

areport-clean:
	@for i in $(FILE);\
        do \
                ($(MAKE) areport-clean -sC $$i);\
        done

format:
	@for i in $(FILE);\
        do \
                ( $(MAKE) format -sC $$i);\
        done

vs-pipe:
	@for i in $(FILE);\
        do \
                ( $(MAKE) vs-pipe -sC $$i);\
        done

vs-par:
	@for i in $(FILE);\
        do \
                ( $(MAKE) vs-par -sC $$i);\
        done

FORCE:
